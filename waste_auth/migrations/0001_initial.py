# Generated by Django 4.2 on 2025-04-30 23:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid
import waste_auth.helpers.reusable
import waste_auth.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="date created"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="date updated"),
                ),
                ("first_name", models.CharField(max_length=255)),
                (
                    "middle_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("last_name", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=255, unique=True)),
                ("email_verified", models.BooleanField(default=False)),
                (
                    "password",
                    models.CharField(
                        editable=False,
                        max_length=255,
                        validators=[waste_auth.helpers.reusable.validate_password],
                    ),
                ),
                ("bvn", models.CharField(blank=True, max_length=250, null=True)),
                ("bvn_verified", models.BooleanField(default=False)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=25, null=True, unique=True),
                ),
                ("phone_verified", models.BooleanField(default=False)),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("MALE", "male"), ("FEMALE", "female")], max_length=10
                    ),
                ),
                ("date_of_birth", models.DateField(blank=True, null=True)),
                (
                    "user_type",
                    models.CharField(
                        choices=[("AGENT", "agent"), ("USER", "user")],
                        default="USER",
                        max_length=12,
                    ),
                ),
                ("is_active", models.BooleanField(default=False)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "USER PROFILE",
                "verbose_name_plural": "USERS PROFILE",
                "ordering": ["-created_at"],
            },
            managers=[
                ("objects", waste_auth.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="ConstantTable",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("account_provider", models.CharField(max_length=300)),
                ("is_active", models.BooleanField(default=False)),
                ("weight_value", models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="OTP",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="date created"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="date updated"),
                ),
                ("type", models.CharField(max_length=255)),
                ("recipient", models.CharField(max_length=255)),
                ("length", models.IntegerField()),
                ("expiry_time", models.IntegerField()),
                ("code", models.CharField(max_length=255)),
                ("is_used", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "ONE TIME PASSWORD",
                "verbose_name_plural": "ONE TIME PASSWORDS",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WasteProduct",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "waste_type",
                    models.CharField(
                        choices=[
                            ("PLASTIC", "plastic"),
                            ("METAL", "metal"),
                            ("GLASS", "glass"),
                            ("PAPER", "paper"),
                            ("ORGANIC", "organic"),
                            ("OTHER", "other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("quantity", models.PositiveIntegerField(blank=True, null=True)),
                ("weight", models.FloatField(blank=True, null=True)),
                ("product_value_amount", models.FloatField(blank=True, null=True)),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "PENDING"),
                            ("CREDITED", "CREDITED"),
                            ("FAILED", "FAILED"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("pickup_location", models.CharField(max_length=255)),
                ("pickup_date", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "pending"),
                            ("COMPLETED", "completed"),
                            ("CANCELLED", "cancelled"),
                        ],
                        default="pending",
                        max_length=50,
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True, null=True, upload_to="waste_products/"
                    ),
                ),
                ("remarks", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="waste_products",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "RECYCLE PRODUCT",
                "verbose_name_plural": "RECYCLE PRODUCT",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RecycleAgents",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pending_pickups_count", models.IntegerField(default=0)),
                ("total_pickups_count", models.IntegerField(default=0)),
                ("last_pickup_date", models.DateTimeField(blank=True, null=True)),
                ("pickup_success_rate", models.FloatField(default=0.0)),
                ("customer_rating", models.FloatField(default=0.0)),
                ("issues_reported_count", models.IntegerField(default=0)),
                (
                    "identification_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="agents",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "last_assigned_product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="last_assigned_product",
                        to="waste_auth.wasteproduct",
                    ),
                ),
            ],
            options={
                "verbose_name": " RECYCLE AGENT",
                "verbose_name_plural": "RECYCLE AGENT",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AgentAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("assigned_at", models.DateTimeField(auto_now_add=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "waste_product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assignments",
                        to="waste_auth.wasteproduct",
                    ),
                ),
            ],
            options={
                "verbose_name": "AGENT ASSIGNMENT",
                "verbose_name_plural": "AGENT ASSIGNMENT",
                "ordering": ["-assigned_at"],
            },
        ),
    ]
